@using System.Runtime.Remoting.Messaging
@using System.Web.Mvc
@using System.Web.Mvc.Html
@using DENTALMIS.Utility
@using DENTALMIS.Web.Extension
@model DENTALMIS.Web.Areas.DrugSection.Models.ViewModel.DrugGenericViewModel
@{
    ViewBag.Title = "DrugGeneric";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<h3 style="margin-left:450px;font-weight: bolder; color: darkorange;">Drug Generic</h3>
<section class="search formCover" style="margin-bottom: 5px;  ">

    @using (Html.BeginForm("Index", "DrugGeneric", FormMethod.Get, new { @class = "submit-allow ignore-validation" }))
    {
        <table>
            <tr>
                <td>
                    <strong>
                        @Html.LabelFor(x=>x.Name) 
                    </strong>

                </td>
                <td>
                    @Html.TextBoxFor(m => m.SearchDrugGenericName, new { @placeholder = "Search", @class = "search_TextBox" })
                </td>
                <td>
                    @Html.SearchButton()
                </td>
            </tr>
            @*<tr>
                @Html.ActionLink("Add User", "Edit", "DrugGeneric", new { @class = "AjaxPopup", title = "Add", @action = "DrugGeneric/Edit" })
            </tr>*@
          
        </table>

    }
</section>
<section class="search formCover">
    <div class="additem">
        <div style="margin-top: 1px;">
            <p>

                @Html.Button("Add New", new { @class = "AjaxPopup", @action = "/DrugGeneric/Edit/" })

            </p>
        </div>
        @{
            var grid = new WebGrid(canPage: true, rowsPerPage: AppConfig.PageSize, canSort: true, ajaxUpdateContainerId: "grid");
            grid.Bind(Model.DrugGenerics, rowCount: Model.TotalRecords, autoSortAndPage: false);
            grid.Pager(WebGridPagerModes.All);
            @grid.GetHtml(htmlAttributes: new { id = "grid" },
                tableStyle: "webgrid-table webgrid",
                headerStyle: "webgrid-header",
                footerStyle: "webgrid-footer",
                alternatingRowStyle: "webgrid-alternating-row",
                selectedRowStyle: "webgrid-selected-row",
                rowStyle: "webgrid-row-style",
                firstText: "First",
                lastText: "Last",
                nextText: "Next",
                mode: WebGridPagerModes.All,
                previousText: "Previous",
                columns: grid.Columns(
                        grid.Column("Name", header: "Generic Name"),

                         grid.Column("Detail/Edit", format: @<text><button class="edit" action="/DrugGeneric/Edit?GenericId=@item.GenericId"></button></text>, canSort: false),
                         grid.Column("Delete",format:@<text><button class="delete" action="/DrugGeneric/Delete?GenericId=@item.GenericId"></button></text>, canSort: false)));
        }
    </div>
</section>

