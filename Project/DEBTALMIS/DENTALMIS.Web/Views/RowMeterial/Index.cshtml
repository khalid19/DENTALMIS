@using DENTALMIS.Utility
@using DENTALMIS.Web.Extension
@model DENTALMIS.Web.Models.ClinicDescriptionModel.ClinicRowMeterialViewModel
@{
    ViewBag.Title = "Clinic Accessoriess";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3 style="margin-left: 450px; font-weight: bolder;color: darkblue;">[--Clinic Meterial--]</h3>
<section class="search formCover" style="margin-bottom: 5px;">
    @using (Html.BeginForm("Index", "RowMeterial", FormMethod.Get, new { @class = "submit-allow ignore-validation" }))
    {
        <table>
            <tr>
                <td>
                    <strong>
                        @Html.LabelFor(x => x.Name)

                    </strong>
                </td>
                <td></td>
                <td></td>

                <td>@Html.TextBoxFor(x => x.SearchbyNamesd, new { @placeholder = "Search", @class = "search_TextBox" })</td>

                <td></td>




                <td>@Html.SearchButton()</td>
            </tr>
        </table>
    }
</section>


<section class="search formCover">
    <div class="additem">
        <div style="margin-top: 1px;">
            <p>@Html.Button("Add new", new { @class = "AjaxPopup", @action = "/RowMeterial/Edit/" })</p>
        </div>
        @{
            var grid = new WebGrid(canPage: true, rowsPerPage: AppConfig.PageSize, canSort: true, ajaxUpdateContainerId: "grid");
            grid.Bind(Model.RowMatrials, rowCount: Model.TotalRecords, autoSortAndPage: false);
            grid.Pager(WebGridPagerModes.All);
            @grid.GetHtml(htmlAttributes: new { id = "grid" },
            tableStyle: "webgrid-table webgrid",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            firstText: "First",
            lastText: "last",
            nextText: "Next",
            mode: WebGridPagerModes.All,
            previousText: "Previous",
            columns: grid.Columns(
                              grid.Column("Name", header: "Clinic Intrumeent Name"),

                                                                                                                                 grid.Column("Cost", header: "Cost In Taka"),

                     grid.Column("ManufacturingDate", header: "Manufacturing Date", format: @<text>@(item.ManufacturingDate == null ? "" : item.ManufacturingDate.ToString("dd/MM/yyyy"))</text>),

                                                  grid.Column("ExpireDate", header: "Expire  Date", format: @<text>@(item.ExpireDate == null ? "" : item.ExpireDate.ToString("dd/MM/yyyy"))</text>),



                                                                                                                                                                                                    grid.Column("Amount", header: "Amount  In Gm", format: @<text>@(item.Amount == null ? "" : item.Amount.ToString())</text>),
                                                                                                                                                                                                                    


                grid.Column("Detail/Edit", format: @<text><button class="edit" action="/RowMeterial/Edit/?RowMaterialId=@item.RowMaterialId"></button></text>, canSort: false),
                         grid.Column("Delete",format:@<text><button class="delete" action="/RowMeterial/Delete/?RowMaterialId=@item.RowMaterialId"></button></text>, canSort: false)));



        }
    </div>
</section>
